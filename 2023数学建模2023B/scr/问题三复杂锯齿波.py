import numpy as np
import matplotlib.pyplot as plt
# 设置支持中文显示
plt.rcParams['font.sans-serif'] = ['SimHei']
plt.rcParams['axes.unicode_minus'] = False

# 数据
data = [0, 22.53, 40.5, 64.87, 84.31, 110.67, 131.69, 160.19, 182.94, 213.76, 238.36, 271.7, 298.3, 334.36, 363.13, 402.13, 433.24, 475.42, 509.07, 554.69, 591.09, 640.43, 679.79, 733.16, 775.73, 833.44, 879.49, 941.91, 991.71, 1059.22, 1113.08, 1186.1, 1244.35, 1323.32, 1386.33, 1471.73, 1539.87, 1632.25, 1705.95, 1805.85, 1885.56, 1993.61, 2079.82, 2196.68, 2289.91, 2416.3, 2517.14, 2653.84, 2762.9, 2910.75, 3028.7, 3188.6, 3316.18, 3489.11, 3627.09, 3814.13, 3963.36, 4165.65, 4327.05, 4545.83, 4720.39, 4957.01, 5145.81, 5401.73, 5605.92, 5882.7, 6103.54, 6402.9, 6641.75, 6965.51, 7223.84, 7574.01, 7853.39, 8232.12]

# 将数据分成奇数行和偶数行
odd_data = data[::2]  # 奇数行
even_data = data[1::2]  # 偶数行

# 创建y坐标数组，奇数行为0，偶数行为3704
y = [0 if i % 2 == 0 else 3704 for i in range(len(data))]

# 绘制锯齿形图
plt.figure(figsize=(12, 6))
plt.plot(data, y, marker='o', linestyle='-')
plt.xlabel('X坐标')
plt.ylabel('Y坐标')
plt.title('锯齿形图')
plt.grid(True)
plt.show()



import numpy as np

# 数据
data = [0, 22.53, 40.5, 64.87, 84.31, 110.67, 131.69, 160.19, 182.94, 213.76, 238.36, 271.7, 298.3, 334.36, 363.13, 402.13, 433.24, 475.42, 509.07, 554.69, 591.09, 640.43, 679.79, 733.16, 775.73, 833.44, 879.49, 941.91, 991.71, 1059.22, 1113.08, 1186.1, 1244.35, 1323.32, 1386.33, 1471.73, 1539.87, 1632.25, 1705.95, 1805.85, 1885.56, 1993.61, 2079.82, 2196.68, 2289.91, 2416.3, 2517.14, 2653.84, 2762.9, 2910.75, 3028.7, 3188.6, 3316.18, 3489.11, 3627.09, 3814.13, 3963.36, 4165.65, 4327.05, 4545.83, 4720.39, 4957.01, 5145.81, 5401.73, 5605.92, 5882.7, 6103.54, 6402.9, 6641.75, 6965.51, 7223.84, 7574.01, 7853.39, 8232.12]

# 初始化线段总长度为0
total_length = 0

# 遍历数据点，计算线段总长度
for i in range(1, len(data)):
    # 计算相邻数据点之间的距离（线段长度，使用勾股定理）
    segment_length = np.sqrt((data[i] - data[i-1])**2 + (y[i] - y[i-1])**2)
    # 将线段长度添加到总长度中
    total_length += segment_length

# 打印锯齿波形线段总长度
print("锯齿波形线段总长度:", total_length)
